/* AST */
import { PrimaryExpr, UnaryExpr, MultiplicativeExpr, AdditiveExpr, BitwiseShiftExpr, RelationalExpr, LogicalAndExpr, LogicalOrExpr, Expr, EqualityExpr, BitwiseAndExpr, BitwiseXorExpr, BitwiseOrExpr, ParenthesizeExpr } from "./ast"

import { NonTerminal, Production, SymbolWrapper, EOF,ParsingTable, Goto, Shift, Accept, Reduce } from "@parser-generator/definition"
import { NUMBER } from "./lexer"

let S = new NonTerminal("S")
let primary_expr = new NonTerminal("primary_expr")
let parenthesize_expr = new NonTerminal("parenthesize_expr")
let unary_expr = new NonTerminal("unary_expr")
let multiplicative_expr = new NonTerminal("multiplicative_expr")
let additive_expr = new NonTerminal("additive_expr")
let bitwise_shift_expr = new NonTerminal("bitwise_shift_expr")
let relational_expr = new NonTerminal("relational_expr")
let equality_expr = new NonTerminal("equality_expr")
let bitwise_and_expr = new NonTerminal("bitwise_and_expr")
let bitwise_xor_expr = new NonTerminal("bitwise_xor_expr")
let bitwise_or_expr = new NonTerminal("bitwise_or_expr")
let logical_and_expr = new NonTerminal("logical_and_expr")
let logical_or_expr = new NonTerminal("logical_or_expr")
let expr = new NonTerminal("expr")
/* (0) S->expr */
let p0 = new Production(0,S,[
	new SymbolWrapper(expr)],undefined,undefined)
/* (1) primary_expr->NUMBER<%(e)=>new PrimaryExpr(e)%> */
let p1 = new Production(1,primary_expr,[
	new SymbolWrapper(NUMBER)],undefined, (e)=>new PrimaryExpr(e) )
/* (2) primary_expr->parenthesize_expr<%(e)=>e[0]%> */
let p2 = new Production(2,primary_expr,[
	new SymbolWrapper(parenthesize_expr)],undefined, (e)=>e[0] )
/* (3) parenthesize_expr->(expr)<%(e)=>new ParenthesizeExpr(e)%> */
let p3 = new Production(3,parenthesize_expr,[
	new SymbolWrapper("("),
	new SymbolWrapper(expr),
	new SymbolWrapper(")")],undefined, (e)=>new ParenthesizeExpr(e) )
/* (4) unary_expr->primary_expr<%(e)=>e[0]%> */
let p4 = new Production(4,unary_expr,[
	new SymbolWrapper(primary_expr)],undefined, (e)=>e[0] )
/* (5) unary_expr->!unary_expr<%(e)=>new UnaryExpr(e)%> */
let p5 = new Production(5,unary_expr,[
	new SymbolWrapper("!"),
	new SymbolWrapper(unary_expr)],undefined, (e)=>new UnaryExpr(e) )
/* (6) unary_expr->~unary_expr<%(e)=>new UnaryExpr(e)%> */
let p6 = new Production(6,unary_expr,[
	new SymbolWrapper("~"),
	new SymbolWrapper(unary_expr)],undefined, (e)=>new UnaryExpr(e) )
/* (7) unary_expr->+unary_expr<%(e)=>new UnaryExpr(e)%> */
let p7 = new Production(7,unary_expr,[
	new SymbolWrapper("+"),
	new SymbolWrapper(unary_expr)],undefined, (e)=>new UnaryExpr(e) )
/* (8) unary_expr->-unary_expr<%(e)=>new UnaryExpr(e)%> */
let p8 = new Production(8,unary_expr,[
	new SymbolWrapper("-"),
	new SymbolWrapper(unary_expr)],undefined, (e)=>new UnaryExpr(e) )
/* (9) multiplicative_expr->unary_expr<%(e)=>e[0]%> */
let p9 = new Production(9,multiplicative_expr,[
	new SymbolWrapper(unary_expr)],undefined, (e)=>e[0] )
/* (10) multiplicative_expr->multiplicative_expr*unary_expr<%(e)=>new MultiplicativeExpr(e)%> */
let p10 = new Production(10,multiplicative_expr,[
	new SymbolWrapper(multiplicative_expr),
	new SymbolWrapper("*"),
	new SymbolWrapper(unary_expr)],undefined, (e)=>new MultiplicativeExpr(e) )
/* (11) multiplicative_expr->multiplicative_expr/unary_expr<%(e)=>new MultiplicativeExpr(e)%> */
let p11 = new Production(11,multiplicative_expr,[
	new SymbolWrapper(multiplicative_expr),
	new SymbolWrapper("/"),
	new SymbolWrapper(unary_expr)],undefined, (e)=>new MultiplicativeExpr(e) )
/* (12) multiplicative_expr->multiplicative_expr%unary_expr<%(e)=>new MultiplicativeExpr(e)%> */
let p12 = new Production(12,multiplicative_expr,[
	new SymbolWrapper(multiplicative_expr),
	new SymbolWrapper("%"),
	new SymbolWrapper(unary_expr)],undefined, (e)=>new MultiplicativeExpr(e) )
/* (13) additive_expr->multiplicative_expr<%(e)=>e[0]%> */
let p13 = new Production(13,additive_expr,[
	new SymbolWrapper(multiplicative_expr)],undefined, (e)=>e[0] )
/* (14) additive_expr->additive_expr+multiplicative_expr<%(e)=>new AdditiveExpr(e)%> */
let p14 = new Production(14,additive_expr,[
	new SymbolWrapper(additive_expr),
	new SymbolWrapper("+"),
	new SymbolWrapper(multiplicative_expr)],undefined, (e)=>new AdditiveExpr(e) )
/* (15) additive_expr->additive_expr-multiplicative_expr<%(e)=>new AdditiveExpr(e)%> */
let p15 = new Production(15,additive_expr,[
	new SymbolWrapper(additive_expr),
	new SymbolWrapper("-"),
	new SymbolWrapper(multiplicative_expr)],undefined, (e)=>new AdditiveExpr(e) )
/* (16) bitwise_shift_expr->additive_expr<%(e)=>e[0]%> */
let p16 = new Production(16,bitwise_shift_expr,[
	new SymbolWrapper(additive_expr)],undefined, (e)=>e[0] )
/* (17) bitwise_shift_expr->bitwise_shift_expr>>additive_expr<%(e)=>new BitwiseShiftExpr(e)%> */
let p17 = new Production(17,bitwise_shift_expr,[
	new SymbolWrapper(bitwise_shift_expr),
	new SymbolWrapper(">>"),
	new SymbolWrapper(additive_expr)],undefined, (e)=>new BitwiseShiftExpr(e) )
/* (18) bitwise_shift_expr->bitwise_shift_expr<<additive_expr<%(e)=>new BitwiseShiftExpr(e)%> */
let p18 = new Production(18,bitwise_shift_expr,[
	new SymbolWrapper(bitwise_shift_expr),
	new SymbolWrapper("<<"),
	new SymbolWrapper(additive_expr)],undefined, (e)=>new BitwiseShiftExpr(e) )
/* (19) bitwise_shift_expr->bitwise_shift_expr>>>additive_expr<%(e)=>new BitwiseShiftExpr(e)%> */
let p19 = new Production(19,bitwise_shift_expr,[
	new SymbolWrapper(bitwise_shift_expr),
	new SymbolWrapper(">>>"),
	new SymbolWrapper(additive_expr)],undefined, (e)=>new BitwiseShiftExpr(e) )
/* (20) relational_expr->bitwise_shift_expr<%(e)=>e[0]%> */
let p20 = new Production(20,relational_expr,[
	new SymbolWrapper(bitwise_shift_expr)],undefined, (e)=>e[0] )
/* (21) relational_expr->relational_expr<bitwise_shift_expr<%(e)=>new RelationalExpr(e)%> */
let p21 = new Production(21,relational_expr,[
	new SymbolWrapper(relational_expr),
	new SymbolWrapper("<"),
	new SymbolWrapper(bitwise_shift_expr)],undefined, (e)=>new RelationalExpr(e) )
/* (22) relational_expr->relational_expr>bitwise_shift_expr<%(e)=>new RelationalExpr(e)%> */
let p22 = new Production(22,relational_expr,[
	new SymbolWrapper(relational_expr),
	new SymbolWrapper(">"),
	new SymbolWrapper(bitwise_shift_expr)],undefined, (e)=>new RelationalExpr(e) )
/* (23) relational_expr->relational_expr<=bitwise_shift_expr<%(e)=>new RelationalExpr(e)%> */
let p23 = new Production(23,relational_expr,[
	new SymbolWrapper(relational_expr),
	new SymbolWrapper("<="),
	new SymbolWrapper(bitwise_shift_expr)],undefined, (e)=>new RelationalExpr(e) )
/* (24) relational_expr->relational_expr>=bitwise_shift_expr<%(e)=>new RelationalExpr(e)%> */
let p24 = new Production(24,relational_expr,[
	new SymbolWrapper(relational_expr),
	new SymbolWrapper(">="),
	new SymbolWrapper(bitwise_shift_expr)],undefined, (e)=>new RelationalExpr(e) )
/* (25) equality_expr->relational_expr<%(e)=>e[0]%> */
let p25 = new Production(25,equality_expr,[
	new SymbolWrapper(relational_expr)],undefined, (e)=>e[0] )
/* (26) equality_expr->equality_expr==relational_expr<%(e)=>new EqualityExpr(e)%> */
let p26 = new Production(26,equality_expr,[
	new SymbolWrapper(equality_expr),
	new SymbolWrapper("=="),
	new SymbolWrapper(relational_expr)],undefined, (e)=>new EqualityExpr(e) )
/* (27) equality_expr->equality_expr!=relational_expr<%(e)=>new EqualityExpr(e)%> */
let p27 = new Production(27,equality_expr,[
	new SymbolWrapper(equality_expr),
	new SymbolWrapper("!="),
	new SymbolWrapper(relational_expr)],undefined, (e)=>new EqualityExpr(e) )
/* (28) bitwise_and_expr->equality_expr<%(e)=>e[0]%> */
let p28 = new Production(28,bitwise_and_expr,[
	new SymbolWrapper(equality_expr)],undefined, (e)=>e[0] )
/* (29) bitwise_and_expr->bitwise_and_expr&equality_expr<%(e)=>new BitwiseAndExpr(e)%> */
let p29 = new Production(29,bitwise_and_expr,[
	new SymbolWrapper(bitwise_and_expr),
	new SymbolWrapper("&"),
	new SymbolWrapper(equality_expr)],undefined, (e)=>new BitwiseAndExpr(e) )
/* (30) bitwise_xor_expr->bitwise_and_expr<%(e)=>e[0]%> */
let p30 = new Production(30,bitwise_xor_expr,[
	new SymbolWrapper(bitwise_and_expr)],undefined, (e)=>e[0] )
/* (31) bitwise_xor_expr->bitwise_xor_expr^bitwise_and_expr<%(e)=>new BitwiseXorExpr(e)%> */
let p31 = new Production(31,bitwise_xor_expr,[
	new SymbolWrapper(bitwise_xor_expr),
	new SymbolWrapper("^"),
	new SymbolWrapper(bitwise_and_expr)],undefined, (e)=>new BitwiseXorExpr(e) )
/* (32) bitwise_or_expr->bitwise_xor_expr<%(e)=>e[0]%> */
let p32 = new Production(32,bitwise_or_expr,[
	new SymbolWrapper(bitwise_xor_expr)],undefined, (e)=>e[0] )
/* (33) bitwise_or_expr->bitwise_or_expr|bitwise_xor_expr<%(e)=>new BitwiseOrExpr(e)%> */
let p33 = new Production(33,bitwise_or_expr,[
	new SymbolWrapper(bitwise_or_expr),
	new SymbolWrapper("|"),
	new SymbolWrapper(bitwise_xor_expr)],undefined, (e)=>new BitwiseOrExpr(e) )
/* (34) logical_and_expr->bitwise_or_expr<%(e)=>e[0]%> */
let p34 = new Production(34,logical_and_expr,[
	new SymbolWrapper(bitwise_or_expr)],undefined, (e)=>e[0] )
/* (35) logical_and_expr->logical_and_expr&&bitwise_or_expr<%(e)=>new LogicalAndExpr(e)%> */
let p35 = new Production(35,logical_and_expr,[
	new SymbolWrapper(logical_and_expr),
	new SymbolWrapper("&&"),
	new SymbolWrapper(bitwise_or_expr)],undefined, (e)=>new LogicalAndExpr(e) )
/* (36) logical_or_expr->logical_and_expr<%(e)=>e[0]%> */
let p36 = new Production(36,logical_or_expr,[
	new SymbolWrapper(logical_and_expr)],undefined, (e)=>e[0] )
/* (37) logical_or_expr->logical_or_expr||logical_and_expr<%(e)=>new LogicalOrExpr(e)%> */
let p37 = new Production(37,logical_or_expr,[
	new SymbolWrapper(logical_or_expr),
	new SymbolWrapper("||"),
	new SymbolWrapper(logical_and_expr)],undefined, (e)=>new LogicalOrExpr(e) )
/* (38) expr->logical_or_expr<%(e)=>new Expr(e)%> */
let p38 = new Production(38,expr,[
	new SymbolWrapper(logical_or_expr)],undefined, (e)=>new Expr(e) )
S.prods=[p0]
primary_expr.prods=[p1,p2]
parenthesize_expr.prods=[p3]
unary_expr.prods=[p4,p5,p6,p7,p8]
multiplicative_expr.prods=[p9,p10,p11,p12]
additive_expr.prods=[p13,p14,p15]
bitwise_shift_expr.prods=[p16,p17,p18,p19]
relational_expr.prods=[p20,p21,p22,p23,p24]
equality_expr.prods=[p25,p26,p27]
bitwise_and_expr.prods=[p28,p29]
bitwise_xor_expr.prods=[p30,p31]
bitwise_or_expr.prods=[p32,p33]
logical_and_expr.prods=[p34,p35]
logical_or_expr.prods=[p36,p37]
expr.prods=[p38]
let table = new ParsingTable()
table.put(0,expr,new Goto(1))
table.put(0,logical_or_expr,new Goto(2))
table.put(0,logical_and_expr,new Goto(3))
table.put(0,bitwise_or_expr,new Goto(4))
table.put(0,bitwise_xor_expr,new Goto(5))
table.put(0,bitwise_and_expr,new Goto(6))
table.put(0,equality_expr,new Goto(7))
table.put(0,relational_expr,new Goto(8))
table.put(0,bitwise_shift_expr,new Goto(9))
table.put(0,additive_expr,new Goto(10))
table.put(0,multiplicative_expr,new Goto(11))
table.put(0,unary_expr,new Goto(12))
table.put(0,primary_expr,new Goto(13))
table.put(0,"!",new Shift(14))
table.put(0,"~",new Shift(15))
table.put(0,"+",new Shift(16))
table.put(0,"-",new Shift(17))
table.put(0,NUMBER,new Shift(18))
table.put(0,parenthesize_expr,new Goto(19))
table.put(0,"(",new Shift(20))
table.put(1,EOF,new Accept())
table.put(2,EOF,new Reduce(p38))
table.put(2,")",new Reduce(p38))
table.put(2,"||",new Shift(21))
table.put(3,"||",new Reduce(p36))
table.put(3,EOF,new Reduce(p36))
table.put(3,")",new Reduce(p36))
table.put(3,"&&",new Shift(22))
table.put(4,"&&",new Reduce(p34))
table.put(4,"||",new Reduce(p34))
table.put(4,EOF,new Reduce(p34))
table.put(4,")",new Reduce(p34))
table.put(4,"|",new Shift(23))
table.put(5,"|",new Reduce(p32))
table.put(5,"&&",new Reduce(p32))
table.put(5,"||",new Reduce(p32))
table.put(5,EOF,new Reduce(p32))
table.put(5,")",new Reduce(p32))
table.put(5,"^",new Shift(24))
table.put(6,"^",new Reduce(p30))
table.put(6,"|",new Reduce(p30))
table.put(6,"&&",new Reduce(p30))
table.put(6,"||",new Reduce(p30))
table.put(6,EOF,new Reduce(p30))
table.put(6,")",new Reduce(p30))
table.put(6,"&",new Shift(25))
table.put(7,"&",new Reduce(p28))
table.put(7,"^",new Reduce(p28))
table.put(7,"|",new Reduce(p28))
table.put(7,"&&",new Reduce(p28))
table.put(7,"||",new Reduce(p28))
table.put(7,EOF,new Reduce(p28))
table.put(7,")",new Reduce(p28))
table.put(7,"==",new Shift(26))
table.put(7,"!=",new Shift(27))
table.put(8,"==",new Reduce(p25))
table.put(8,"!=",new Reduce(p25))
table.put(8,"&",new Reduce(p25))
table.put(8,"^",new Reduce(p25))
table.put(8,"|",new Reduce(p25))
table.put(8,"&&",new Reduce(p25))
table.put(8,"||",new Reduce(p25))
table.put(8,EOF,new Reduce(p25))
table.put(8,")",new Reduce(p25))
table.put(8,"<",new Shift(28))
table.put(8,">",new Shift(29))
table.put(8,"<=",new Shift(30))
table.put(8,">=",new Shift(31))
table.put(9,"<",new Reduce(p20))
table.put(9,">",new Reduce(p20))
table.put(9,"<=",new Reduce(p20))
table.put(9,">=",new Reduce(p20))
table.put(9,"==",new Reduce(p20))
table.put(9,"!=",new Reduce(p20))
table.put(9,"&",new Reduce(p20))
table.put(9,"^",new Reduce(p20))
table.put(9,"|",new Reduce(p20))
table.put(9,"&&",new Reduce(p20))
table.put(9,"||",new Reduce(p20))
table.put(9,EOF,new Reduce(p20))
table.put(9,")",new Reduce(p20))
table.put(9,">>",new Shift(32))
table.put(9,"<<",new Shift(33))
table.put(9,">>>",new Shift(34))
table.put(10,">>",new Reduce(p16))
table.put(10,"<<",new Reduce(p16))
table.put(10,">>>",new Reduce(p16))
table.put(10,"<",new Reduce(p16))
table.put(10,">",new Reduce(p16))
table.put(10,"<=",new Reduce(p16))
table.put(10,">=",new Reduce(p16))
table.put(10,"==",new Reduce(p16))
table.put(10,"!=",new Reduce(p16))
table.put(10,"&",new Reduce(p16))
table.put(10,"^",new Reduce(p16))
table.put(10,"|",new Reduce(p16))
table.put(10,"&&",new Reduce(p16))
table.put(10,"||",new Reduce(p16))
table.put(10,EOF,new Reduce(p16))
table.put(10,")",new Reduce(p16))
table.put(10,"+",new Shift(35))
table.put(10,"-",new Shift(36))
table.put(11,"+",new Reduce(p13))
table.put(11,"-",new Reduce(p13))
table.put(11,">>",new Reduce(p13))
table.put(11,"<<",new Reduce(p13))
table.put(11,">>>",new Reduce(p13))
table.put(11,"<",new Reduce(p13))
table.put(11,">",new Reduce(p13))
table.put(11,"<=",new Reduce(p13))
table.put(11,">=",new Reduce(p13))
table.put(11,"==",new Reduce(p13))
table.put(11,"!=",new Reduce(p13))
table.put(11,"&",new Reduce(p13))
table.put(11,"^",new Reduce(p13))
table.put(11,"|",new Reduce(p13))
table.put(11,"&&",new Reduce(p13))
table.put(11,"||",new Reduce(p13))
table.put(11,EOF,new Reduce(p13))
table.put(11,")",new Reduce(p13))
table.put(11,"*",new Shift(37))
table.put(11,"/",new Shift(38))
table.put(11,"%",new Shift(39))
table.put(12,"*",new Reduce(p9))
table.put(12,"/",new Reduce(p9))
table.put(12,"%",new Reduce(p9))
table.put(12,"+",new Reduce(p9))
table.put(12,"-",new Reduce(p9))
table.put(12,">>",new Reduce(p9))
table.put(12,"<<",new Reduce(p9))
table.put(12,">>>",new Reduce(p9))
table.put(12,"<",new Reduce(p9))
table.put(12,">",new Reduce(p9))
table.put(12,"<=",new Reduce(p9))
table.put(12,">=",new Reduce(p9))
table.put(12,"==",new Reduce(p9))
table.put(12,"!=",new Reduce(p9))
table.put(12,"&",new Reduce(p9))
table.put(12,"^",new Reduce(p9))
table.put(12,"|",new Reduce(p9))
table.put(12,"&&",new Reduce(p9))
table.put(12,"||",new Reduce(p9))
table.put(12,EOF,new Reduce(p9))
table.put(12,")",new Reduce(p9))
table.put(13,"*",new Reduce(p4))
table.put(13,"/",new Reduce(p4))
table.put(13,"%",new Reduce(p4))
table.put(13,"+",new Reduce(p4))
table.put(13,"-",new Reduce(p4))
table.put(13,">>",new Reduce(p4))
table.put(13,"<<",new Reduce(p4))
table.put(13,">>>",new Reduce(p4))
table.put(13,"<",new Reduce(p4))
table.put(13,">",new Reduce(p4))
table.put(13,"<=",new Reduce(p4))
table.put(13,">=",new Reduce(p4))
table.put(13,"==",new Reduce(p4))
table.put(13,"!=",new Reduce(p4))
table.put(13,"&",new Reduce(p4))
table.put(13,"^",new Reduce(p4))
table.put(13,"|",new Reduce(p4))
table.put(13,"&&",new Reduce(p4))
table.put(13,"||",new Reduce(p4))
table.put(13,EOF,new Reduce(p4))
table.put(13,")",new Reduce(p4))
table.put(14,unary_expr,new Goto(40))
table.put(14,primary_expr,new Goto(13))
table.put(14,"!",new Shift(14))
table.put(14,"~",new Shift(15))
table.put(14,"+",new Shift(16))
table.put(14,"-",new Shift(17))
table.put(14,NUMBER,new Shift(18))
table.put(14,parenthesize_expr,new Goto(19))
table.put(14,"(",new Shift(20))
table.put(15,unary_expr,new Goto(41))
table.put(15,primary_expr,new Goto(13))
table.put(15,"!",new Shift(14))
table.put(15,"~",new Shift(15))
table.put(15,"+",new Shift(16))
table.put(15,"-",new Shift(17))
table.put(15,NUMBER,new Shift(18))
table.put(15,parenthesize_expr,new Goto(19))
table.put(15,"(",new Shift(20))
table.put(16,unary_expr,new Goto(42))
table.put(16,primary_expr,new Goto(13))
table.put(16,"!",new Shift(14))
table.put(16,"~",new Shift(15))
table.put(16,"+",new Shift(16))
table.put(16,"-",new Shift(17))
table.put(16,NUMBER,new Shift(18))
table.put(16,parenthesize_expr,new Goto(19))
table.put(16,"(",new Shift(20))
table.put(17,unary_expr,new Goto(43))
table.put(17,primary_expr,new Goto(13))
table.put(17,"!",new Shift(14))
table.put(17,"~",new Shift(15))
table.put(17,"+",new Shift(16))
table.put(17,"-",new Shift(17))
table.put(17,NUMBER,new Shift(18))
table.put(17,parenthesize_expr,new Goto(19))
table.put(17,"(",new Shift(20))
table.put(18,"*",new Reduce(p1))
table.put(18,"/",new Reduce(p1))
table.put(18,"%",new Reduce(p1))
table.put(18,"+",new Reduce(p1))
table.put(18,"-",new Reduce(p1))
table.put(18,">>",new Reduce(p1))
table.put(18,"<<",new Reduce(p1))
table.put(18,">>>",new Reduce(p1))
table.put(18,"<",new Reduce(p1))
table.put(18,">",new Reduce(p1))
table.put(18,"<=",new Reduce(p1))
table.put(18,">=",new Reduce(p1))
table.put(18,"==",new Reduce(p1))
table.put(18,"!=",new Reduce(p1))
table.put(18,"&",new Reduce(p1))
table.put(18,"^",new Reduce(p1))
table.put(18,"|",new Reduce(p1))
table.put(18,"&&",new Reduce(p1))
table.put(18,"||",new Reduce(p1))
table.put(18,EOF,new Reduce(p1))
table.put(18,")",new Reduce(p1))
table.put(19,"*",new Reduce(p2))
table.put(19,"/",new Reduce(p2))
table.put(19,"%",new Reduce(p2))
table.put(19,"+",new Reduce(p2))
table.put(19,"-",new Reduce(p2))
table.put(19,">>",new Reduce(p2))
table.put(19,"<<",new Reduce(p2))
table.put(19,">>>",new Reduce(p2))
table.put(19,"<",new Reduce(p2))
table.put(19,">",new Reduce(p2))
table.put(19,"<=",new Reduce(p2))
table.put(19,">=",new Reduce(p2))
table.put(19,"==",new Reduce(p2))
table.put(19,"!=",new Reduce(p2))
table.put(19,"&",new Reduce(p2))
table.put(19,"^",new Reduce(p2))
table.put(19,"|",new Reduce(p2))
table.put(19,"&&",new Reduce(p2))
table.put(19,"||",new Reduce(p2))
table.put(19,EOF,new Reduce(p2))
table.put(19,")",new Reduce(p2))
table.put(20,expr,new Goto(44))
table.put(20,logical_or_expr,new Goto(2))
table.put(20,logical_and_expr,new Goto(3))
table.put(20,bitwise_or_expr,new Goto(4))
table.put(20,bitwise_xor_expr,new Goto(5))
table.put(20,bitwise_and_expr,new Goto(6))
table.put(20,equality_expr,new Goto(7))
table.put(20,relational_expr,new Goto(8))
table.put(20,bitwise_shift_expr,new Goto(9))
table.put(20,additive_expr,new Goto(10))
table.put(20,multiplicative_expr,new Goto(11))
table.put(20,unary_expr,new Goto(12))
table.put(20,primary_expr,new Goto(13))
table.put(20,"!",new Shift(14))
table.put(20,"~",new Shift(15))
table.put(20,"+",new Shift(16))
table.put(20,"-",new Shift(17))
table.put(20,NUMBER,new Shift(18))
table.put(20,parenthesize_expr,new Goto(19))
table.put(20,"(",new Shift(20))
table.put(21,logical_and_expr,new Goto(45))
table.put(21,bitwise_or_expr,new Goto(4))
table.put(21,bitwise_xor_expr,new Goto(5))
table.put(21,bitwise_and_expr,new Goto(6))
table.put(21,equality_expr,new Goto(7))
table.put(21,relational_expr,new Goto(8))
table.put(21,bitwise_shift_expr,new Goto(9))
table.put(21,additive_expr,new Goto(10))
table.put(21,multiplicative_expr,new Goto(11))
table.put(21,unary_expr,new Goto(12))
table.put(21,primary_expr,new Goto(13))
table.put(21,"!",new Shift(14))
table.put(21,"~",new Shift(15))
table.put(21,"+",new Shift(16))
table.put(21,"-",new Shift(17))
table.put(21,NUMBER,new Shift(18))
table.put(21,parenthesize_expr,new Goto(19))
table.put(21,"(",new Shift(20))
table.put(22,bitwise_or_expr,new Goto(46))
table.put(22,bitwise_xor_expr,new Goto(5))
table.put(22,bitwise_and_expr,new Goto(6))
table.put(22,equality_expr,new Goto(7))
table.put(22,relational_expr,new Goto(8))
table.put(22,bitwise_shift_expr,new Goto(9))
table.put(22,additive_expr,new Goto(10))
table.put(22,multiplicative_expr,new Goto(11))
table.put(22,unary_expr,new Goto(12))
table.put(22,primary_expr,new Goto(13))
table.put(22,"!",new Shift(14))
table.put(22,"~",new Shift(15))
table.put(22,"+",new Shift(16))
table.put(22,"-",new Shift(17))
table.put(22,NUMBER,new Shift(18))
table.put(22,parenthesize_expr,new Goto(19))
table.put(22,"(",new Shift(20))
table.put(23,bitwise_xor_expr,new Goto(47))
table.put(23,bitwise_and_expr,new Goto(6))
table.put(23,equality_expr,new Goto(7))
table.put(23,relational_expr,new Goto(8))
table.put(23,bitwise_shift_expr,new Goto(9))
table.put(23,additive_expr,new Goto(10))
table.put(23,multiplicative_expr,new Goto(11))
table.put(23,unary_expr,new Goto(12))
table.put(23,primary_expr,new Goto(13))
table.put(23,"!",new Shift(14))
table.put(23,"~",new Shift(15))
table.put(23,"+",new Shift(16))
table.put(23,"-",new Shift(17))
table.put(23,NUMBER,new Shift(18))
table.put(23,parenthesize_expr,new Goto(19))
table.put(23,"(",new Shift(20))
table.put(24,bitwise_and_expr,new Goto(48))
table.put(24,equality_expr,new Goto(7))
table.put(24,relational_expr,new Goto(8))
table.put(24,bitwise_shift_expr,new Goto(9))
table.put(24,additive_expr,new Goto(10))
table.put(24,multiplicative_expr,new Goto(11))
table.put(24,unary_expr,new Goto(12))
table.put(24,primary_expr,new Goto(13))
table.put(24,"!",new Shift(14))
table.put(24,"~",new Shift(15))
table.put(24,"+",new Shift(16))
table.put(24,"-",new Shift(17))
table.put(24,NUMBER,new Shift(18))
table.put(24,parenthesize_expr,new Goto(19))
table.put(24,"(",new Shift(20))
table.put(25,equality_expr,new Goto(49))
table.put(25,relational_expr,new Goto(8))
table.put(25,bitwise_shift_expr,new Goto(9))
table.put(25,additive_expr,new Goto(10))
table.put(25,multiplicative_expr,new Goto(11))
table.put(25,unary_expr,new Goto(12))
table.put(25,primary_expr,new Goto(13))
table.put(25,"!",new Shift(14))
table.put(25,"~",new Shift(15))
table.put(25,"+",new Shift(16))
table.put(25,"-",new Shift(17))
table.put(25,NUMBER,new Shift(18))
table.put(25,parenthesize_expr,new Goto(19))
table.put(25,"(",new Shift(20))
table.put(26,relational_expr,new Goto(50))
table.put(26,bitwise_shift_expr,new Goto(9))
table.put(26,additive_expr,new Goto(10))
table.put(26,multiplicative_expr,new Goto(11))
table.put(26,unary_expr,new Goto(12))
table.put(26,primary_expr,new Goto(13))
table.put(26,"!",new Shift(14))
table.put(26,"~",new Shift(15))
table.put(26,"+",new Shift(16))
table.put(26,"-",new Shift(17))
table.put(26,NUMBER,new Shift(18))
table.put(26,parenthesize_expr,new Goto(19))
table.put(26,"(",new Shift(20))
table.put(27,relational_expr,new Goto(51))
table.put(27,bitwise_shift_expr,new Goto(9))
table.put(27,additive_expr,new Goto(10))
table.put(27,multiplicative_expr,new Goto(11))
table.put(27,unary_expr,new Goto(12))
table.put(27,primary_expr,new Goto(13))
table.put(27,"!",new Shift(14))
table.put(27,"~",new Shift(15))
table.put(27,"+",new Shift(16))
table.put(27,"-",new Shift(17))
table.put(27,NUMBER,new Shift(18))
table.put(27,parenthesize_expr,new Goto(19))
table.put(27,"(",new Shift(20))
table.put(28,bitwise_shift_expr,new Goto(52))
table.put(28,additive_expr,new Goto(10))
table.put(28,multiplicative_expr,new Goto(11))
table.put(28,unary_expr,new Goto(12))
table.put(28,primary_expr,new Goto(13))
table.put(28,"!",new Shift(14))
table.put(28,"~",new Shift(15))
table.put(28,"+",new Shift(16))
table.put(28,"-",new Shift(17))
table.put(28,NUMBER,new Shift(18))
table.put(28,parenthesize_expr,new Goto(19))
table.put(28,"(",new Shift(20))
table.put(29,bitwise_shift_expr,new Goto(53))
table.put(29,additive_expr,new Goto(10))
table.put(29,multiplicative_expr,new Goto(11))
table.put(29,unary_expr,new Goto(12))
table.put(29,primary_expr,new Goto(13))
table.put(29,"!",new Shift(14))
table.put(29,"~",new Shift(15))
table.put(29,"+",new Shift(16))
table.put(29,"-",new Shift(17))
table.put(29,NUMBER,new Shift(18))
table.put(29,parenthesize_expr,new Goto(19))
table.put(29,"(",new Shift(20))
table.put(30,bitwise_shift_expr,new Goto(54))
table.put(30,additive_expr,new Goto(10))
table.put(30,multiplicative_expr,new Goto(11))
table.put(30,unary_expr,new Goto(12))
table.put(30,primary_expr,new Goto(13))
table.put(30,"!",new Shift(14))
table.put(30,"~",new Shift(15))
table.put(30,"+",new Shift(16))
table.put(30,"-",new Shift(17))
table.put(30,NUMBER,new Shift(18))
table.put(30,parenthesize_expr,new Goto(19))
table.put(30,"(",new Shift(20))
table.put(31,bitwise_shift_expr,new Goto(55))
table.put(31,additive_expr,new Goto(10))
table.put(31,multiplicative_expr,new Goto(11))
table.put(31,unary_expr,new Goto(12))
table.put(31,primary_expr,new Goto(13))
table.put(31,"!",new Shift(14))
table.put(31,"~",new Shift(15))
table.put(31,"+",new Shift(16))
table.put(31,"-",new Shift(17))
table.put(31,NUMBER,new Shift(18))
table.put(31,parenthesize_expr,new Goto(19))
table.put(31,"(",new Shift(20))
table.put(32,additive_expr,new Goto(56))
table.put(32,multiplicative_expr,new Goto(11))
table.put(32,unary_expr,new Goto(12))
table.put(32,primary_expr,new Goto(13))
table.put(32,"!",new Shift(14))
table.put(32,"~",new Shift(15))
table.put(32,"+",new Shift(16))
table.put(32,"-",new Shift(17))
table.put(32,NUMBER,new Shift(18))
table.put(32,parenthesize_expr,new Goto(19))
table.put(32,"(",new Shift(20))
table.put(33,additive_expr,new Goto(57))
table.put(33,multiplicative_expr,new Goto(11))
table.put(33,unary_expr,new Goto(12))
table.put(33,primary_expr,new Goto(13))
table.put(33,"!",new Shift(14))
table.put(33,"~",new Shift(15))
table.put(33,"+",new Shift(16))
table.put(33,"-",new Shift(17))
table.put(33,NUMBER,new Shift(18))
table.put(33,parenthesize_expr,new Goto(19))
table.put(33,"(",new Shift(20))
table.put(34,additive_expr,new Goto(58))
table.put(34,multiplicative_expr,new Goto(11))
table.put(34,unary_expr,new Goto(12))
table.put(34,primary_expr,new Goto(13))
table.put(34,"!",new Shift(14))
table.put(34,"~",new Shift(15))
table.put(34,"+",new Shift(16))
table.put(34,"-",new Shift(17))
table.put(34,NUMBER,new Shift(18))
table.put(34,parenthesize_expr,new Goto(19))
table.put(34,"(",new Shift(20))
table.put(35,multiplicative_expr,new Goto(59))
table.put(35,unary_expr,new Goto(12))
table.put(35,primary_expr,new Goto(13))
table.put(35,"!",new Shift(14))
table.put(35,"~",new Shift(15))
table.put(35,"+",new Shift(16))
table.put(35,"-",new Shift(17))
table.put(35,NUMBER,new Shift(18))
table.put(35,parenthesize_expr,new Goto(19))
table.put(35,"(",new Shift(20))
table.put(36,multiplicative_expr,new Goto(60))
table.put(36,unary_expr,new Goto(12))
table.put(36,primary_expr,new Goto(13))
table.put(36,"!",new Shift(14))
table.put(36,"~",new Shift(15))
table.put(36,"+",new Shift(16))
table.put(36,"-",new Shift(17))
table.put(36,NUMBER,new Shift(18))
table.put(36,parenthesize_expr,new Goto(19))
table.put(36,"(",new Shift(20))
table.put(37,unary_expr,new Goto(61))
table.put(37,primary_expr,new Goto(13))
table.put(37,"!",new Shift(14))
table.put(37,"~",new Shift(15))
table.put(37,"+",new Shift(16))
table.put(37,"-",new Shift(17))
table.put(37,NUMBER,new Shift(18))
table.put(37,parenthesize_expr,new Goto(19))
table.put(37,"(",new Shift(20))
table.put(38,unary_expr,new Goto(62))
table.put(38,primary_expr,new Goto(13))
table.put(38,"!",new Shift(14))
table.put(38,"~",new Shift(15))
table.put(38,"+",new Shift(16))
table.put(38,"-",new Shift(17))
table.put(38,NUMBER,new Shift(18))
table.put(38,parenthesize_expr,new Goto(19))
table.put(38,"(",new Shift(20))
table.put(39,unary_expr,new Goto(63))
table.put(39,primary_expr,new Goto(13))
table.put(39,"!",new Shift(14))
table.put(39,"~",new Shift(15))
table.put(39,"+",new Shift(16))
table.put(39,"-",new Shift(17))
table.put(39,NUMBER,new Shift(18))
table.put(39,parenthesize_expr,new Goto(19))
table.put(39,"(",new Shift(20))
table.put(40,"*",new Reduce(p5))
table.put(40,"/",new Reduce(p5))
table.put(40,"%",new Reduce(p5))
table.put(40,"+",new Reduce(p5))
table.put(40,"-",new Reduce(p5))
table.put(40,">>",new Reduce(p5))
table.put(40,"<<",new Reduce(p5))
table.put(40,">>>",new Reduce(p5))
table.put(40,"<",new Reduce(p5))
table.put(40,">",new Reduce(p5))
table.put(40,"<=",new Reduce(p5))
table.put(40,">=",new Reduce(p5))
table.put(40,"==",new Reduce(p5))
table.put(40,"!=",new Reduce(p5))
table.put(40,"&",new Reduce(p5))
table.put(40,"^",new Reduce(p5))
table.put(40,"|",new Reduce(p5))
table.put(40,"&&",new Reduce(p5))
table.put(40,"||",new Reduce(p5))
table.put(40,EOF,new Reduce(p5))
table.put(40,")",new Reduce(p5))
table.put(41,"*",new Reduce(p6))
table.put(41,"/",new Reduce(p6))
table.put(41,"%",new Reduce(p6))
table.put(41,"+",new Reduce(p6))
table.put(41,"-",new Reduce(p6))
table.put(41,">>",new Reduce(p6))
table.put(41,"<<",new Reduce(p6))
table.put(41,">>>",new Reduce(p6))
table.put(41,"<",new Reduce(p6))
table.put(41,">",new Reduce(p6))
table.put(41,"<=",new Reduce(p6))
table.put(41,">=",new Reduce(p6))
table.put(41,"==",new Reduce(p6))
table.put(41,"!=",new Reduce(p6))
table.put(41,"&",new Reduce(p6))
table.put(41,"^",new Reduce(p6))
table.put(41,"|",new Reduce(p6))
table.put(41,"&&",new Reduce(p6))
table.put(41,"||",new Reduce(p6))
table.put(41,EOF,new Reduce(p6))
table.put(41,")",new Reduce(p6))
table.put(42,"*",new Reduce(p7))
table.put(42,"/",new Reduce(p7))
table.put(42,"%",new Reduce(p7))
table.put(42,"+",new Reduce(p7))
table.put(42,"-",new Reduce(p7))
table.put(42,">>",new Reduce(p7))
table.put(42,"<<",new Reduce(p7))
table.put(42,">>>",new Reduce(p7))
table.put(42,"<",new Reduce(p7))
table.put(42,">",new Reduce(p7))
table.put(42,"<=",new Reduce(p7))
table.put(42,">=",new Reduce(p7))
table.put(42,"==",new Reduce(p7))
table.put(42,"!=",new Reduce(p7))
table.put(42,"&",new Reduce(p7))
table.put(42,"^",new Reduce(p7))
table.put(42,"|",new Reduce(p7))
table.put(42,"&&",new Reduce(p7))
table.put(42,"||",new Reduce(p7))
table.put(42,EOF,new Reduce(p7))
table.put(42,")",new Reduce(p7))
table.put(43,"*",new Reduce(p8))
table.put(43,"/",new Reduce(p8))
table.put(43,"%",new Reduce(p8))
table.put(43,"+",new Reduce(p8))
table.put(43,"-",new Reduce(p8))
table.put(43,">>",new Reduce(p8))
table.put(43,"<<",new Reduce(p8))
table.put(43,">>>",new Reduce(p8))
table.put(43,"<",new Reduce(p8))
table.put(43,">",new Reduce(p8))
table.put(43,"<=",new Reduce(p8))
table.put(43,">=",new Reduce(p8))
table.put(43,"==",new Reduce(p8))
table.put(43,"!=",new Reduce(p8))
table.put(43,"&",new Reduce(p8))
table.put(43,"^",new Reduce(p8))
table.put(43,"|",new Reduce(p8))
table.put(43,"&&",new Reduce(p8))
table.put(43,"||",new Reduce(p8))
table.put(43,EOF,new Reduce(p8))
table.put(43,")",new Reduce(p8))
table.put(44,")",new Shift(64))
table.put(45,"||",new Reduce(p37))
table.put(45,EOF,new Reduce(p37))
table.put(45,")",new Reduce(p37))
table.put(45,"&&",new Shift(22))
table.put(46,"&&",new Reduce(p35))
table.put(46,"||",new Reduce(p35))
table.put(46,EOF,new Reduce(p35))
table.put(46,")",new Reduce(p35))
table.put(46,"|",new Shift(23))
table.put(47,"|",new Reduce(p33))
table.put(47,"&&",new Reduce(p33))
table.put(47,"||",new Reduce(p33))
table.put(47,EOF,new Reduce(p33))
table.put(47,")",new Reduce(p33))
table.put(47,"^",new Shift(24))
table.put(48,"^",new Reduce(p31))
table.put(48,"|",new Reduce(p31))
table.put(48,"&&",new Reduce(p31))
table.put(48,"||",new Reduce(p31))
table.put(48,EOF,new Reduce(p31))
table.put(48,")",new Reduce(p31))
table.put(48,"&",new Shift(25))
table.put(49,"&",new Reduce(p29))
table.put(49,"^",new Reduce(p29))
table.put(49,"|",new Reduce(p29))
table.put(49,"&&",new Reduce(p29))
table.put(49,"||",new Reduce(p29))
table.put(49,EOF,new Reduce(p29))
table.put(49,")",new Reduce(p29))
table.put(49,"==",new Shift(26))
table.put(49,"!=",new Shift(27))
table.put(50,"==",new Reduce(p26))
table.put(50,"!=",new Reduce(p26))
table.put(50,"&",new Reduce(p26))
table.put(50,"^",new Reduce(p26))
table.put(50,"|",new Reduce(p26))
table.put(50,"&&",new Reduce(p26))
table.put(50,"||",new Reduce(p26))
table.put(50,EOF,new Reduce(p26))
table.put(50,")",new Reduce(p26))
table.put(50,"<",new Shift(28))
table.put(50,">",new Shift(29))
table.put(50,"<=",new Shift(30))
table.put(50,">=",new Shift(31))
table.put(51,"==",new Reduce(p27))
table.put(51,"!=",new Reduce(p27))
table.put(51,"&",new Reduce(p27))
table.put(51,"^",new Reduce(p27))
table.put(51,"|",new Reduce(p27))
table.put(51,"&&",new Reduce(p27))
table.put(51,"||",new Reduce(p27))
table.put(51,EOF,new Reduce(p27))
table.put(51,")",new Reduce(p27))
table.put(51,"<",new Shift(28))
table.put(51,">",new Shift(29))
table.put(51,"<=",new Shift(30))
table.put(51,">=",new Shift(31))
table.put(52,"<",new Reduce(p21))
table.put(52,">",new Reduce(p21))
table.put(52,"<=",new Reduce(p21))
table.put(52,">=",new Reduce(p21))
table.put(52,"==",new Reduce(p21))
table.put(52,"!=",new Reduce(p21))
table.put(52,"&",new Reduce(p21))
table.put(52,"^",new Reduce(p21))
table.put(52,"|",new Reduce(p21))
table.put(52,"&&",new Reduce(p21))
table.put(52,"||",new Reduce(p21))
table.put(52,EOF,new Reduce(p21))
table.put(52,")",new Reduce(p21))
table.put(52,">>",new Shift(32))
table.put(52,"<<",new Shift(33))
table.put(52,">>>",new Shift(34))
table.put(53,"<",new Reduce(p22))
table.put(53,">",new Reduce(p22))
table.put(53,"<=",new Reduce(p22))
table.put(53,">=",new Reduce(p22))
table.put(53,"==",new Reduce(p22))
table.put(53,"!=",new Reduce(p22))
table.put(53,"&",new Reduce(p22))
table.put(53,"^",new Reduce(p22))
table.put(53,"|",new Reduce(p22))
table.put(53,"&&",new Reduce(p22))
table.put(53,"||",new Reduce(p22))
table.put(53,EOF,new Reduce(p22))
table.put(53,")",new Reduce(p22))
table.put(53,">>",new Shift(32))
table.put(53,"<<",new Shift(33))
table.put(53,">>>",new Shift(34))
table.put(54,"<",new Reduce(p23))
table.put(54,">",new Reduce(p23))
table.put(54,"<=",new Reduce(p23))
table.put(54,">=",new Reduce(p23))
table.put(54,"==",new Reduce(p23))
table.put(54,"!=",new Reduce(p23))
table.put(54,"&",new Reduce(p23))
table.put(54,"^",new Reduce(p23))
table.put(54,"|",new Reduce(p23))
table.put(54,"&&",new Reduce(p23))
table.put(54,"||",new Reduce(p23))
table.put(54,EOF,new Reduce(p23))
table.put(54,")",new Reduce(p23))
table.put(54,">>",new Shift(32))
table.put(54,"<<",new Shift(33))
table.put(54,">>>",new Shift(34))
table.put(55,"<",new Reduce(p24))
table.put(55,">",new Reduce(p24))
table.put(55,"<=",new Reduce(p24))
table.put(55,">=",new Reduce(p24))
table.put(55,"==",new Reduce(p24))
table.put(55,"!=",new Reduce(p24))
table.put(55,"&",new Reduce(p24))
table.put(55,"^",new Reduce(p24))
table.put(55,"|",new Reduce(p24))
table.put(55,"&&",new Reduce(p24))
table.put(55,"||",new Reduce(p24))
table.put(55,EOF,new Reduce(p24))
table.put(55,")",new Reduce(p24))
table.put(55,">>",new Shift(32))
table.put(55,"<<",new Shift(33))
table.put(55,">>>",new Shift(34))
table.put(56,">>",new Reduce(p17))
table.put(56,"<<",new Reduce(p17))
table.put(56,">>>",new Reduce(p17))
table.put(56,"<",new Reduce(p17))
table.put(56,">",new Reduce(p17))
table.put(56,"<=",new Reduce(p17))
table.put(56,">=",new Reduce(p17))
table.put(56,"==",new Reduce(p17))
table.put(56,"!=",new Reduce(p17))
table.put(56,"&",new Reduce(p17))
table.put(56,"^",new Reduce(p17))
table.put(56,"|",new Reduce(p17))
table.put(56,"&&",new Reduce(p17))
table.put(56,"||",new Reduce(p17))
table.put(56,EOF,new Reduce(p17))
table.put(56,")",new Reduce(p17))
table.put(56,"+",new Shift(35))
table.put(56,"-",new Shift(36))
table.put(57,">>",new Reduce(p18))
table.put(57,"<<",new Reduce(p18))
table.put(57,">>>",new Reduce(p18))
table.put(57,"<",new Reduce(p18))
table.put(57,">",new Reduce(p18))
table.put(57,"<=",new Reduce(p18))
table.put(57,">=",new Reduce(p18))
table.put(57,"==",new Reduce(p18))
table.put(57,"!=",new Reduce(p18))
table.put(57,"&",new Reduce(p18))
table.put(57,"^",new Reduce(p18))
table.put(57,"|",new Reduce(p18))
table.put(57,"&&",new Reduce(p18))
table.put(57,"||",new Reduce(p18))
table.put(57,EOF,new Reduce(p18))
table.put(57,")",new Reduce(p18))
table.put(57,"+",new Shift(35))
table.put(57,"-",new Shift(36))
table.put(58,">>",new Reduce(p19))
table.put(58,"<<",new Reduce(p19))
table.put(58,">>>",new Reduce(p19))
table.put(58,"<",new Reduce(p19))
table.put(58,">",new Reduce(p19))
table.put(58,"<=",new Reduce(p19))
table.put(58,">=",new Reduce(p19))
table.put(58,"==",new Reduce(p19))
table.put(58,"!=",new Reduce(p19))
table.put(58,"&",new Reduce(p19))
table.put(58,"^",new Reduce(p19))
table.put(58,"|",new Reduce(p19))
table.put(58,"&&",new Reduce(p19))
table.put(58,"||",new Reduce(p19))
table.put(58,EOF,new Reduce(p19))
table.put(58,")",new Reduce(p19))
table.put(58,"+",new Shift(35))
table.put(58,"-",new Shift(36))
table.put(59,"+",new Reduce(p14))
table.put(59,"-",new Reduce(p14))
table.put(59,">>",new Reduce(p14))
table.put(59,"<<",new Reduce(p14))
table.put(59,">>>",new Reduce(p14))
table.put(59,"<",new Reduce(p14))
table.put(59,">",new Reduce(p14))
table.put(59,"<=",new Reduce(p14))
table.put(59,">=",new Reduce(p14))
table.put(59,"==",new Reduce(p14))
table.put(59,"!=",new Reduce(p14))
table.put(59,"&",new Reduce(p14))
table.put(59,"^",new Reduce(p14))
table.put(59,"|",new Reduce(p14))
table.put(59,"&&",new Reduce(p14))
table.put(59,"||",new Reduce(p14))
table.put(59,EOF,new Reduce(p14))
table.put(59,")",new Reduce(p14))
table.put(59,"*",new Shift(37))
table.put(59,"/",new Shift(38))
table.put(59,"%",new Shift(39))
table.put(60,"+",new Reduce(p15))
table.put(60,"-",new Reduce(p15))
table.put(60,">>",new Reduce(p15))
table.put(60,"<<",new Reduce(p15))
table.put(60,">>>",new Reduce(p15))
table.put(60,"<",new Reduce(p15))
table.put(60,">",new Reduce(p15))
table.put(60,"<=",new Reduce(p15))
table.put(60,">=",new Reduce(p15))
table.put(60,"==",new Reduce(p15))
table.put(60,"!=",new Reduce(p15))
table.put(60,"&",new Reduce(p15))
table.put(60,"^",new Reduce(p15))
table.put(60,"|",new Reduce(p15))
table.put(60,"&&",new Reduce(p15))
table.put(60,"||",new Reduce(p15))
table.put(60,EOF,new Reduce(p15))
table.put(60,")",new Reduce(p15))
table.put(60,"*",new Shift(37))
table.put(60,"/",new Shift(38))
table.put(60,"%",new Shift(39))
table.put(61,"*",new Reduce(p10))
table.put(61,"/",new Reduce(p10))
table.put(61,"%",new Reduce(p10))
table.put(61,"+",new Reduce(p10))
table.put(61,"-",new Reduce(p10))
table.put(61,">>",new Reduce(p10))
table.put(61,"<<",new Reduce(p10))
table.put(61,">>>",new Reduce(p10))
table.put(61,"<",new Reduce(p10))
table.put(61,">",new Reduce(p10))
table.put(61,"<=",new Reduce(p10))
table.put(61,">=",new Reduce(p10))
table.put(61,"==",new Reduce(p10))
table.put(61,"!=",new Reduce(p10))
table.put(61,"&",new Reduce(p10))
table.put(61,"^",new Reduce(p10))
table.put(61,"|",new Reduce(p10))
table.put(61,"&&",new Reduce(p10))
table.put(61,"||",new Reduce(p10))
table.put(61,EOF,new Reduce(p10))
table.put(61,")",new Reduce(p10))
table.put(62,"*",new Reduce(p11))
table.put(62,"/",new Reduce(p11))
table.put(62,"%",new Reduce(p11))
table.put(62,"+",new Reduce(p11))
table.put(62,"-",new Reduce(p11))
table.put(62,">>",new Reduce(p11))
table.put(62,"<<",new Reduce(p11))
table.put(62,">>>",new Reduce(p11))
table.put(62,"<",new Reduce(p11))
table.put(62,">",new Reduce(p11))
table.put(62,"<=",new Reduce(p11))
table.put(62,">=",new Reduce(p11))
table.put(62,"==",new Reduce(p11))
table.put(62,"!=",new Reduce(p11))
table.put(62,"&",new Reduce(p11))
table.put(62,"^",new Reduce(p11))
table.put(62,"|",new Reduce(p11))
table.put(62,"&&",new Reduce(p11))
table.put(62,"||",new Reduce(p11))
table.put(62,EOF,new Reduce(p11))
table.put(62,")",new Reduce(p11))
table.put(63,"*",new Reduce(p12))
table.put(63,"/",new Reduce(p12))
table.put(63,"%",new Reduce(p12))
table.put(63,"+",new Reduce(p12))
table.put(63,"-",new Reduce(p12))
table.put(63,">>",new Reduce(p12))
table.put(63,"<<",new Reduce(p12))
table.put(63,">>>",new Reduce(p12))
table.put(63,"<",new Reduce(p12))
table.put(63,">",new Reduce(p12))
table.put(63,"<=",new Reduce(p12))
table.put(63,">=",new Reduce(p12))
table.put(63,"==",new Reduce(p12))
table.put(63,"!=",new Reduce(p12))
table.put(63,"&",new Reduce(p12))
table.put(63,"^",new Reduce(p12))
table.put(63,"|",new Reduce(p12))
table.put(63,"&&",new Reduce(p12))
table.put(63,"||",new Reduce(p12))
table.put(63,EOF,new Reduce(p12))
table.put(63,")",new Reduce(p12))
table.put(64,"*",new Reduce(p3))
table.put(64,"/",new Reduce(p3))
table.put(64,"%",new Reduce(p3))
table.put(64,"+",new Reduce(p3))
table.put(64,"-",new Reduce(p3))
table.put(64,">>",new Reduce(p3))
table.put(64,"<<",new Reduce(p3))
table.put(64,">>>",new Reduce(p3))
table.put(64,"<",new Reduce(p3))
table.put(64,">",new Reduce(p3))
table.put(64,"<=",new Reduce(p3))
table.put(64,">=",new Reduce(p3))
table.put(64,"==",new Reduce(p3))
table.put(64,"!=",new Reduce(p3))
table.put(64,"&",new Reduce(p3))
table.put(64,"^",new Reduce(p3))
table.put(64,"|",new Reduce(p3))
table.put(64,"&&",new Reduce(p3))
table.put(64,"||",new Reduce(p3))
table.put(64,EOF,new Reduce(p3))
table.put(64,")",new Reduce(p3))

export default table